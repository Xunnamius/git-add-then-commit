{
  "name": "git-add-then-commit",
  "version": "2.1.3",
  "description": "Minimalist CLI tool to automate the git-add-then-commit workflow for conventional commit messages",
  "keywords": [
    "git",
    "conventional",
    "commit",
    "commits",
    "conventional-commit",
    "add",
    "angular",
    "semantic",
    "release"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Xunnamius/git-add-then-commit"
  },
  "license": "MIT",
  "author": "Xunnamius",
  "sideEffects": false,
  "type": "commonjs",
  "exports": {
    ".": {
      "import": "./dist/esm/index.mjs",
      "require": "./dist/index.js",
      "default": "./dist/index.js"
    },
    "./package": "./package.json",
    "./package.json": "./package.json"
  },
  "main": "./dist/index.js",
  "module": "./dist/esm/index.mjs",
  "types": "./dist/types/src/index.d.ts",
  "bin": {
    "gac": "./dist/cli.js",
    "git-add-then-commit": "./dist/cli.js"
  },
  "files": [
    "/dist",
    "/LICENSE",
    "/package.json",
    "/README.md"
  ],
  "scripts": {
    "build": "npm run build-dist --",
    "build-changelog": "conventional-changelog --outfile CHANGELOG.md --config conventional.config.js --release-count 0 --skip-unstable && (if [ \"$CHANGELOG_SKIP_TITLE\" != 'true' ]; then { node -e 'console.log(require(\"./conventional.config.js\").changelogTitle)'; cat CHANGELOG.md; } > CHANGELOG.md.ignore && mv CHANGELOG.md.ignore CHANGELOG.md; fi) && remark -o --use reference-links --use gfm --use frontmatter CHANGELOG.md && prettier --write CHANGELOG.md",
    "build-dist": "if [ -r ./next.config.js ]; then next build; else NODE_ENV=production tsc --project tsconfig.types.json && NODE_ENV=production webpack --config-name lib && if [ -r ./src/cli.ts ]; then NODE_ENV=production webpack --config-name cli && chmod +x ./dist/cli.js; fi && NODE_ENV=esm babel src --extensions .ts --out-dir dist/esm --out-file-extension .mjs; fi",
    "build-docs": "if [ -r ./next.config.js ]; then typedoc --plugin typedoc-plugin-markdown --out docs --readme none lib src test types external-scripts --exclude '**/*.test.*' --exclude external-scripts/bin; else ENTRY=`node -e 'console.log((x => typeof x==\"string\"?x:x.default)(require(\"./package.json\").exports[\".\"]).replace(/\\.\\/dist\\/(.+)\\.[a-zA-Z0-9]+$/, \"./src/$1.ts\"))'` && echo 'Entry file:' \"$ENTRY\" && typedoc --plugin typedoc-plugin-markdown --out docs --readme none $ENTRY && find docs -name '*.md' -exec sed -i -e 's/Project: //g' {} + && sed -i -e 1,4d docs/README.md; fi && find docs -name '*.md' -exec sed -i -e 's/`__namedParameters`/`\\(destructured\\)`/g' {} + && find docs -name '*.md' -exec sed -i -E 's/`__namedParameters\\.([^`]+)`/`\\({ \\1 }\\)`/g' {} +",
    "build-stats": "NODE_ENV=production webpack --json > bundle-stats.ignore.json",
    "clean": "rm -rf dist coverage external-scripts/bin bundle-stats.ignore.json && git ls-files --exclude-standard --ignored --others --directory dist | xargs rm -rf {} +",
    "format": "sort-package-json && remark -o --use reference-links --use gfm --use frontmatter '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}' && prettier --write '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}' && if [ -z \"$ALLOW_DISABLED_LINKS\" ] && grep -qR --exclude-dir=node_modules --include='*.md' '\\\\\\[[^\\]*\\]\\\\' .; then echo '---\nWARNING: disabled links were found in the following files:'; grep -R --color=always --exclude-dir=node_modules --include='*.md' '\\\\\\[[^\\]*\\]\\\\' .; echo '(to ignore this error, run this command again with ALLOW_DISABLED_LINKS=1)'; exit 1; fi",
    "lint": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.lint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.lint.json src; Y=$?; remark --quiet --use gfm --use frontmatter --use lint-final-newline --use lint-no-auto-link-without-protocol --use lint-no-blockquote-without-marker --use lint-ordered-list-marker-style --use lint-hard-break-spaces --use lint-no-duplicate-definitions --use lint-no-heading-content-indent --use lint-no-inline-padding --use lint-no-undefined-references --use lint-no-unused-definitions --use validate-links '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}'; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "list-tasks": "node -e 'console.log(Object.keys(require(\"./package.json\").scripts).join(\"\\n\"))'",
    "prepare": "if [ -z \"$CI\" ] && [ \"$NODE_ENV\" = \"development\" ]; then npx --no husky install; else echo 'skipped installing husky git hooks'; fi",
    "test": "npm run test-unit --",
    "test-integration": "BABEL_ENV=test jest $JEST_CLI test/integration-*.test.ts* --testPathIgnorePatterns dist test/unit-*.test.ts",
    "test-integration-client": "BABEL_ENV=test jest $JEST_CLI test/integration-client*.test.ts* --testPathIgnorePatterns dist",
    "test-integration-node": "BABEL_ENV=test jest $JEST_CLI test/integration-node*.test.ts* --testPathIgnorePatterns dist",
    "test-integration-webpack": "BABEL_ENV=test jest $JEST_CLI test/integration-webpack*.test.ts* --testPathIgnorePatterns dist",
    "test-unit": "BABEL_ENV=test jest $JEST_CLI --coverage --collectCoverageFrom 'src/**/*.ts*' --collectCoverageFrom 'lib/**/*.ts*' --collectCoverageFrom 'external-scripts/**/*.ts*' --testPathIgnorePatterns test/integration-*.test.ts* dist",
    "test-repeat-unit": "npm run __test-repeat-unit --silent",
    "test-repeat-all": "npm run __test-repeat-all --silent"
  },
  "dependencies": {
    "common-ancestor-path": "^1.0.1",
    "debug": "^4.3.2",
    "execa": "^5.1.1",
    "simple-git": "^2.45.0",
    "yargs": "^17.1.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.14.8",
    "@babel/core": "^7.15.0",
    "@babel/plugin-proposal-export-default-from": "^7.14.5",
    "@babel/plugin-proposal-function-bind": "^7.14.5",
    "@babel/preset-env": "^7.15.0",
    "@babel/preset-typescript": "^7.15.0",
    "@commitlint/cli": "^13.1.0",
    "@commitlint/config-conventional": "^13.1.0",
    "@ergodark/types": "^1.0.17",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/exec": "^5.0.0",
    "@semantic-release/git": "^9.0.0",
    "@types/confusing-browser-globals": "^1.0.0",
    "@types/debug": "^4.1.7",
    "@types/jest": "^27.0.1",
    "@types/node": "^16.7.4",
    "@types/semver": "^7.3.8",
    "@types/webpack": "^5.28.0",
    "@types/yargs": "^17.0.2",
    "@typescript-eslint/eslint-plugin": "^4.29.3",
    "@typescript-eslint/parser": "^4.29.3",
    "@xunnamius/conventional-changelog-projector": "^1.0.3",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^27.1.0",
    "babel-loader": "^8.2.2",
    "babel-plugin-add-import-extension": "^1.6.0",
    "babel-plugin-explicit-exports-references": "^1.0.1",
    "babel-plugin-source-map-support": "^2.1.3",
    "babel-plugin-transform-default-named-imports": "^1.0.9",
    "babel-plugin-transform-rename-import": "^2.3.0",
    "confusing-browser-globals": "^1.0.10",
    "conventional-changelog-angular": "^5.0.12",
    "conventional-changelog-cli": "^2.1.1",
    "del": "^6.0.0",
    "dotenv": "^10.0.0",
    "eslint": "^7.32.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^2.4.0",
    "eslint-plugin-import": "^2.24.2",
    "eslint-plugin-jest": "^24.4.0",
    "husky": "^7.0.2",
    "jest": "^27.1.0",
    "jest-circus": "^27.1.0",
    "jest-extended": "^0.11.5",
    "lint-staged": "^11.1.2",
    "named-app-errors": "^1.0.5",
    "prettier": "^2.3.2",
    "remark-cli": "^10.0.0",
    "remark-frontmatter": "^4.0.0",
    "remark-gfm": "^2.0.0",
    "remark-lint-final-newline": "^2.0.1",
    "remark-lint-hard-break-spaces": "^3.0.1",
    "remark-lint-no-auto-link-without-protocol": "^3.0.1",
    "remark-lint-no-blockquote-without-marker": "^5.0.1",
    "remark-lint-no-duplicate-definitions": "^3.0.1",
    "remark-lint-no-heading-content-indent": "^4.0.1",
    "remark-lint-no-inline-padding": "^4.0.1",
    "remark-lint-no-undefined-references": "^4.0.1",
    "remark-lint-no-unused-definitions": "^3.0.1",
    "remark-lint-ordered-list-marker-style": "^3.0.1",
    "remark-reference-links": "^6.0.0",
    "remark-validate-links": "^11.0.1",
    "semantic-release": "github:xunnamius/semantic-release",
    "semver": "^7.3.5",
    "sort-package-json": "github:xunnamius/sort-package-json",
    "source-map-support": "^0.5.19",
    "spellchecker": "^3.7.1",
    "text-extensions": "^2.4.0",
    "typedoc": "^0.22.4",
    "typedoc-plugin-markdown": "^3.10.4",
    "typescript": "^4.4.2",
    "unique-filename": "^1.1.1",
    "webpack": "^5.51.1",
    "webpack-cli": "^4.8.0",
    "webpack-node-externals": "^3.0.0",
    "webpack-node-module-types": "^1.0.7"
  },
  "engines": {
    "node": ">=12.x"
  },
  "publishConfig": {
    "access": "public"
  }
}
